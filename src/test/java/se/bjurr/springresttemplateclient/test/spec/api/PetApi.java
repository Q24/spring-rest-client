/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.27).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package se.bjurr.springresttemplateclient.test.spec.api;

import java.util.List;
import java.util.Map;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import se.bjurr.springresttemplateclient.test.spec.model.ModelApiResponse;
import se.bjurr.springresttemplateclient.test.spec.model.Pet;

public interface PetApi {

  @RequestMapping(
      value = "/pet",
      consumes = {"application/json"},
      method = RequestMethod.POST)
  ResponseEntity<Void> addPet(@RequestBody Pet body);

  @RequestMapping(value = "/pet/{petId}", method = RequestMethod.DELETE)
  ResponseEntity<Void> deletePet(
      @PathVariable("petId") Long petId,
      @RequestHeader(value = "api_key", required = false) String apiKey);

  @RequestMapping(
      value = "/pet/findByStatus",
      produces = {"application/json"},
      method = RequestMethod.GET)
  List<Pet> findPetsByStatus(@RequestParam(value = "status", required = true) List<String> status);

  @RequestMapping(
      value = "/pet/findByStatusListMap",
      produces = {"application/json"},
      method = RequestMethod.GET)
  List<Map<String, String>> findPetsByStatusListMap(
      @RequestParam(value = "status", required = true) List<String> status);

  @RequestMapping(
      value = "/pet/findByStatus",
      produces = {"application/json"},
      method = RequestMethod.GET)
  ResponseEntity<List<Pet>> findPetsByStatusResponseEntity(
      @RequestParam(value = "status", required = true) List<String> status);

  @RequestMapping(
      value = "/pet/findByTags",
      produces = {"application/json"},
      method = RequestMethod.GET)
  ResponseEntity<List<Pet>> findPetsByTags(
      @RequestParam(value = "tags", required = true) List<String> tags);

  @RequestMapping(
      value = "/pet/{petId}",
      produces = {"application/json"},
      method = RequestMethod.GET)
  ResponseEntity<Pet> getPetById(@PathVariable("petId") Long petId);

  @RequestMapping(
      value = "/pet",
      consumes = {"application/json"},
      method = RequestMethod.PUT)
  ResponseEntity<Void> updatePet(@RequestBody Pet body);

  @RequestMapping(
      value = "/pet/{petId}",
      consumes = {"application/x-www-form-urlencoded"},
      method = RequestMethod.POST)
  ResponseEntity<Void> updatePetWithForm(
      @PathVariable("petId") Long petId,
      @RequestParam(value = "name", required = false) String name,
      @RequestParam(value = "status", required = false) String status);

  @RequestMapping(
      value = "/pet/{petId}/uploadImage",
      produces = {"application/json"},
      method = RequestMethod.POST)
  ResponseEntity<ModelApiResponse> uploadFile(
      @PathVariable("petId") Long petId, @RequestBody Object body);
}
